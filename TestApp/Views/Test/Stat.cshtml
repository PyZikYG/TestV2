@model TestApp.Models.AnswerViewModels.Stat

@{
    ViewBag.Title = "Статистика теста";
    Layout = "_Layout";
}

<h2 style="margin-top: 15px">
    Статистика теста
    <a href="@Url.Action("Details", "Test", new {id = Model.TestId})">
        "@Model.TestName"
    </a>
</h2>

@if (Model.MostDifficult != null)
{
    <hr/>
    <h4>Самый сложный вопрос:</h4>
    <h5>
        <a href="@Url.Action("Details", "Question", new {testId = Model.TestId, questionId = Model.MostDifficult.Id})">
            @Model.MostDifficult.Title
        </a>
    </h5>
}
@if (Model.MostEasy != null)
{
    <h4>Самый легкий вопрос:</h4>
    <h5>
        <a href="@Url.Action("Details", "Question", new {testId = Model.TestId, questionId = Model.MostEasy.Id})">
            @Model.MostEasy.Title
        </a>
    </h5>
}

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" id="chart1-tab" data-toggle="tab" href="#chart1" role="tab"
           aria-controls="chart1" aria-selected="true">
            Количество ответов
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="chart2-tab" data-toggle="tab" href="#chart2" role="tab"
           aria-controls="profile" aria-selected="false">
            Средний балл
        </a>
    </li>
</ul>
<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="chart1" role="tabpanel" aria-labelledby="chart1-tab">
        <div class="chart-container">
            <canvas id="canvas1" height="500px"></canvas>
        </div>
    </div>
    <div class="tab-pane fade" id="chart2" role="tabpanel" aria-labelledby="chart2-tab">
        <div class="chart-container">
            <canvas id="canvas2" height="500px"></canvas>
        </div>
    </div>
</div>

@section Scripts
{
    <link rel="stylesheet" href="~/lib/chart.js/dist/Chart.css"/>
    <script src="~/lib/chart.js/dist/Chart.bundle.js"></script>
    <script src="~/lib/chart.js/samples/utils.js"></script>
    <style>
        .chart-container {
            width: 1000px;
            
        }
    </style>
    <script type="text/javascript">
        var questionStats = @Html.Raw(Json.Serialize(Model.QuestionStats));
        
        $("#canvas1").attr("height", getHeight(questionStats.length));
        $("#canvas2").attr("height", getHeight(questionStats.length));
        
        var titles = questionStats.map(x => x.questionTitle);
        var color = Chart.helpers.color;
        var chart1Data = {
            labels: titles.map(x => truncateString(x, 40, '...')),
            datasets: [
                {
                    label: 'Верные',
                    backgroundColor: 'rgba(66, 255, 158, 1)',
                    borderColor: window.chartColors.green,
                    borderWidth: 1,
                    data: questionStats.map(x => x.rightCount)

                },
                {
                    label: 'Частично верные',
                    backgroundColor: window.chartColors.yellow,
                    borderColor: window.chartColors.yellow,
                    data: questionStats.map(x => x.partiallyRightCount)
                },
                {
                    label: 'Неверные',
                    backgroundColor: window.chartColors.red,
                    borderColor: window.chartColors.red,
                    borderWidth: 1,
                    data: questionStats.map(x => x.wrongCount)
                }
            ]

        };
        var chart2Data = {
                    labels: titles.map(x => truncateString(x, 40, '...')),
                    datasets: [
                        {
                            label: 'Макс балл за вопрос',
                            backgroundColor: 'rgba(66, 255, 158, 1)',
                            borderColor: window.chartColors.green,
                            borderWidth: 1,
                            data: questionStats.map(x => x.maxScore)
        
                        },
                        {
                            label: 'Средний балл',
                            backgroundColor: "rgba(3,203,255,1)",
                            borderColor: "rgba(3,203,255,1)",
                            data: questionStats.map(x => x.averageScore)
                        },
                        {
                            label: 'Стандартное отклонение',
                            backgroundColor: "rgb(99,98,255)",
                            borderColor: "rgb(99,98,255)",
                            data: questionStats.map(x => x.scoreStandartDerivation)
                        }
                    ]
        
                };
        
        window.onload = function() {
            Chart.defaults.global.defaultFontSize = 15;
            ShowChart1();
        };
        
        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
         if (e.target.id === "chart1-tab"){
             ShowChart1();
         }
         else if (e.target.id === "chart2-tab") {
             ShowChart2();
             }
        });
       

        
        
        function ShowChart1() {
           var ctx1 = document.getElementById('canvas1').getContext('2d');
           window.Chart1 = new Chart(ctx1,
                          {
                              type: 'horizontalBar',
                              data: chart1Data,
                              options: {
                                  maintainAspectRatio: false,
                                  layout: {
                                      padding: {
                                          left: 0,
                                          right: 0,
                                          top: 40,
                                          bottom: 0
                                      }
                                  },
                                  elements: {
                                      rectangle: {
                                          borderWidth: 2,
                                      }
                                  },
                                  tooltips: {
                                  			mode: 'index',
                                  			callbacks: {
                                  			        
                                  					footer: function(tooltipItems, data) {
                                                          var questionType;
                                 							var tooltipItem = tooltipItems[0];
                               						    questionType= questionStats[tooltipItem.index].questionType;
                                 							return 'Тип: ' + questionType;
                                 						},
                                 					},
                                 					footerFontStyle: 'normal'
                                 				},
                                  responsive: true,
                                  legend: {
                                      position: 'top',
                                      labels: {
                                          fontFamily: "'Roboto','sans-serif','Arial'",
                                          fontSize: 16,
                                      }
          
                                  },
                                  title: {
                                      display: true,
                                  },
                                  
                              }
                          });
        }
        
        function ShowChart2() {
                    var ctx2 = document.getElementById('canvas2').getContext('2d');
                               window.Chart2 = new Chart(ctx2,
                               {
                                                   type: 'horizontalBar',
                                                   data: chart2Data,
                                                   options: {
                                                       maintainAspectRatio: false,
                                                       layout: {
                                                           padding: {
                                                               left: 0,
                                                               right: 0,
                                                               top: 40,
                                                               bottom: 0
                                                           }
                                                       },
                                                       elements: {
                                                           rectangle: {
                                                               borderWidth: 2,
                                                               
                                                           }
                                                       },
                                                       tooltips: {
                                                       			mode: 'index',
                                                       			callbacks: {
                                                       			        
                                                       					footer: function(tooltipItems, data) {
                                                                               var questionType;
                                                      							var tooltipItem = tooltipItems[0];
                                                    						    questionType= questionStats[tooltipItem.index].questionType;
                                                      							return 'Тип: ' + questionType;
                                                      						},
                                                      					},
                                                      					footerFontStyle: 'normal'
                                                      				},
                                                       responsive: true,
                                                       legend: {
                                                           position: 'top',
                                                           labels: {
                                                               fontFamily: "'Roboto','sans-serif','Arial'",
                                                               fontSize: 16,
                                                           }
                               
                                                       },
                                                       title: {
                                                           display: true,
                                                       },
                                                       
                                                   }
                                               });
         }
                
        function getHeight(n) {
            var h = 50;
            if (n < 8) h = 80;
            else if (n < 15) h = 60;
            else if (n < 20) h = 50;
            else h = 40;
            return (100 + h * n).toString()+"px";
        }
        
    </script>


}